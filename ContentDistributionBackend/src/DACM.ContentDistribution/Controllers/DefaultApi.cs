/*
 * ContentDistributionBackend
 *
 * Service providing content distribution metadata for ordered digital assets
 *
 * OpenAPI spec version: 0.0.1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Collections.Generic;
using Microsoft.AspNetCore.Mvc;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using System.ComponentModel.DataAnnotations;
using DACM.ContentDistribution.Attributes;

using Microsoft.AspNetCore.Authorization;
using DACM.ContentDistribution.Models;

namespace DACM.ContentDistribution.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class DefaultApiController : ControllerBase
    { 
        /// <summary>
        /// Process order list and get the content distribution metadata
        /// </summary>
        /// <remarks>Process order list and get the content distribution metadata</remarks>
        /// <param name="body">Order list metadata</param>
        /// <response code="200">Successful operation</response>
        /// <response code="400">Invalid input</response>
        /// <response code="422">Validation exception</response>
        [HttpPost]
        [Route("/orderlist")]
        [ValidateModelState]
        [SwaggerOperation("ProcessOrderList")]
        [SwaggerResponse(statusCode: 200, type: typeof(ContentDistributionMetadata), description: "Successful operation")]
        public virtual IActionResult ProcessOrderList([FromBody]OrderListMetadata body)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(ContentDistributionMetadata));

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400);

            //TODO: Uncomment the next line to return response 422 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(422);
            string exampleJson = null;
            exampleJson = "{\n  \"distributionMethod\" : \"\",\n  \"assets\" : \"\",\n  \"distributionDate\" : \"\",\n  \"distributionChannel\" : \"\"\n}";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<ContentDistributionMetadata>(exampleJson)
                        : default(ContentDistributionMetadata);            //TODO: Change the data returned
            return new ObjectResult(example);
        }
    }
}
