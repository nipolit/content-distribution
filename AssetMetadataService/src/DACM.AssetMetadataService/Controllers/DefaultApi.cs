/*
 * AssetMetadataService
 *
 * Service providing asset metadata
 *
 * OpenAPI spec version: 0.0.1
 *
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System.Collections.Generic;
using DACM.AssetMetadataService.Attributes;
using DACM.AssetMetadataService.Models;
using Microsoft.AspNetCore.Mvc;
using Swashbuckle.AspNetCore.Annotations;

namespace DACM.AssetMetadataService.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class DefaultApiController : ControllerBase
    {
        private Services.AssetMetadataService _assetMetadataService;
        public DefaultApiController()
        {
            _assetMetadataService = new Services.AssetMetadataService();
        }
        
        /// <summary>
        /// Responds with asset metadata for requested asset IDs
        /// </summary>
        /// <remarks>Responds with asset metadata for requested asset IDs</remarks>
        /// <param name="assetIds">Asset IDs</param>
        /// <response code="200">Successful operation</response>
        /// <response code="400">Invalid input</response>
        /// <response code="422">Validation exception</response>
        [HttpPost]
        [Route("/asset-ids")]
        [ValidateModelState]
        [SwaggerOperation("FetchAssetMetadata")]
        [SwaggerResponse(statusCode: 200, type: typeof(IList<AssetMetadata>), description: "Successful operation")]
        public IActionResult FetchAssetMetadata(IList<string> assetIds)
        {
            System.Threading.Thread.Sleep(200); // Slow down the API request
            var assetMetadataList = _assetMetadataService.FetchAssetMetadata(assetIds);
            return new OkObjectResult(assetMetadataList);
        }
    }
}
